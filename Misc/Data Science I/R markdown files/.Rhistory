knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
cereals %>%
mutate(chr_count = str_count(name)) %>%
arrange(desc(chr_count)) %>%
filter(row_number() == 1)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
cereals <- read_csv(url("https://raw.githubusercontent.com/kylescotshank/applied_data_science/master/data/cereal.csv"))
cereals
dim(cereals)
cereals %>%
select_if(is.character) %>%
ncol()
cereals %>%
group_by(mfr) %>%
summarise(count = n()) %>%
arrange(desc(count)) %>%
filter(row_number() == 1)
sort(table(cereals$mfr))[length(table(cereals$mfr))]
cereals %>%
filter(mfr == "A" ) %>%
select(name)
cereals %>%
arrange(calories) %>%
select(name, calories) %>%
filter(row_number() <= 3)
cereals %>%
arrange(desc(rating)) %>%
filter(type == "C", mfr == "Q") %>%
select(name, rating) %>%
filter(row_number() == 1)
cereals %>%
mutate(sugs.carbs = sugars + carbo) %>%
filter(type == "H") %>%
arrange(desc(sugs.carbs))%>%
select(name) %>%
filter(row_number() == 1)
cereals %>%
filter_all(any_vars(. < 0)) %>%
nrow()
cereals %>%
filter(shelf == 1) %>%
arrange(desc(fiber), sodium) %>%
select(name, fiber, sodium) %>%
filter(row_number() == 1)
cereals %>%
group_by(type) %>%
summarise(type_counts = n()) %>%
pivot_wider(names_from = type, values_from = type_counts) %>%  # nifty
summarise(percentage = 100*(H/(C+H)))
cereals %>%
group_by(shelf) %>%
summarise(avg_vit = mean(vitamins)) %>%
arrange(desc(avg_vit)) %>%
mutate(percent_avg_vit = 100 * avg_vit / sum(avg_vit)) %>%
filter(row_number() == 1)
cereals %>%
filter(shelf == 3) %>%
group_by(mfr) %>%
summarise(mfr_counts = n()) %>%
arrange(desc(mfr_counts)) %>%
mutate(percent_shelf_3 = 100 * mfr_counts / sum(mfr_counts)) %>%
filter(row_number() == 1)
cereals %>%
summarise(range = max(rating)-min(rating))
cereals %>%
mutate(fat_per_cal = fat/calories) %>%
arrange(desc(fat_per_cal)) %>%
filter(row_number() == 1) %>%
select(name, fat_per_cal)
cereals %>%
filter_all(any_vars(. < 0)) %>%
select(name | where(is.numeric)) %>%
pivot_longer(-name, names_to = "categories", values_to = "values") %>%
group_by(name) %>%
summarise(n_negatives = sum(values < 0)) %>%
arrange(desc(n_negatives)) %>%
filter(row_number() == 1)
?str_count
cereals %>%
mutate(chr_count = str_count(name)) %>%
arrange(desc(chr_count)) %>%
filter(row_number() == 1)
?str_count
cereals %>%
select(name) %>%
mutate(chr_count = str_count(name)) %>%
arrange(desc(chr_count)) %>%
filter(row_number() == 1)
